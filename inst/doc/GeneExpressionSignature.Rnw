%\VignetteIndexEntry{GeneExpressionSignature}
%\VignetteKeywords{signature, aggragate, distance}
%\VignettePackage{GeneExpressionSignature}

\documentclass[a4paper]{article}

\usepackage{times}
\usepackage{natbib}
\usepackage{hyperref}
\usepackage{amsmath}
\usepackage[utf8]{inputenc}

\title{GeneExpressionSignature: Computing pairwise distances between different biological states}
\author{Yang Cao, Lu Han, Fei Li, Xiaochen Bo}

\begin{document}
\bibliographystyle{plainnat}

\maketitle
\tableofcontents

\section{Introduction}

The \emph{GeneExpressionSignature} package utilizes gene expression profiles to measure the similarity between different biological states. It provides two algorithms for similarity measurement: the GSEA algorithm which is mentioned in \citep{iorio2010discovery} and the PGSEA algorithm in PGSEA R package. A further description of the measurement methods based on gene expression signature can be found in Lamb\citep{lamb2006connectivity}, Hu\citep{hu2009human} and Iorio\citep{iorio2010discovery}.

This manual is a brief introduction to structure, functions and usage of GeneExpressionSignature package. It shows how the biological similarity is determined through a series of calculation steps and how that information can be used for further cluster analysis.

\section{Getting Started}

A complete analysis procedure accepts a set of gene expression profiles representing different biological states as input, and generates a similarity matrix as output. It can be divided into three steps: 1)data ranking, 2)rank merging, and 3)similarity measuring.

\noindent 
First, we load the package by entering the following command in your R session:
<<>>=
library(GeneExpressionSignature)
@

\subsection{Data Ranking}

Gene expression profiles should be properly preprocessed before analysis as prerequisite, including background correction, normalization and summarization. Instead of the exact values, ranks of gene expression levels are used in the following procedure. A ranked list of genes was obtained first by sorting the microarray probe-set identifiers according to the different expression values (count or ratio). It should be noticed that there is no specific function for data ranking in the package, but as a regular precessing at beginning of rank merging or similarity measuring to support ratio, log ratio, and rank data stored as ExpressionSet class in `eset` object as input data.

As an example, we start from lading cultured the exampleSet data, a subset of C-MAP Lamb\citep{lamb2006connectivity} as sample data, which is a large reference catalogue of gene expression data from cultured human cells perturbed with many chemicals and genetic reagents. The sub dataset is composed of 50 paired gene expression profiles involving 22283 genes. This profiles are obtained from cells treated 15 compounds respectively, the values of which already converted to rank orders. 

<<echo=TRUE>>=
data(exampleSet)
show(exampleSet)
exprs(exampleSet)[c(1:10),c(1:3)]
levels(as(phenoData(exampleSet),"data.frame")[,1])

@

\subsection{Rank Merging}

By rank merging, multiple ranked lists are merging into a single ranked list, referred as prototype ranked list (PRL), representing certain kind of biological state. This procedure is mainly performed before similarity measuring, and applied to specific situations that occur when multiple ranked list are assigned to one single biological state with different cell types or experimental condition.
 
This package provides two commonly employed algorithms for rank merging: one utilizes the Kruskal algorithm proposed by \citep{iorio2010discovery} and another generalizes the rank problem to an optimization problem in the R RankAggreg package. For inconvenience, two functions, {\it Iorio.RankMering} and {\it Pihur.RankMering} are provided for aggregating the ranked lists into one or many PRLs according their phenotypic data using the different algorithms mentioned above. All the things that we need to do is construct a ExpressionSet object as input, with ranked lists as assay data and corresponding biological states as phenotypic data.

Take the exampleSet data as example, rank merging process will generate a mergingSet of 15 PRLs from 50 paired expression profiles with each PRL corresponding one of 15 compounds respectively.

<<Iorio.RankMerging>>=
MergingSet <- Iorio.RankMerging(exampleSet,MergingDistance="Spearman")
show(MergingSet)
@

\subsection{Similarity Measuring}

One single combined PRL for a state was obtained after rank merging procedure. These PRLs are used to measure the similarity of the gene signature across different biological states by scoring functions {\it ScoreGSEA} and {\it ScorePGSEA}. Not all the genes are involved in similarity measuring, but only a subset of genes called gene signature whose combined expression pattern is uniquely characteristic of the biological state. Generally the genes used as gene signatures in the similarity scoring procedure are predefined by priori knowledge. Iorio\citep{iorio2010discovery} proposed an "optimal signature" approach by taking the most up-regulated genes and the most down-regulated genes as gene signature.The size of gene signatures need to be considered, which is taken as another parameter besides the PRLs in similarity measuring. In most cases, the default size of gene signature is 250 for genome-wide expression profile.

Suppose N is the number of PRLs (also same as the number of biological states), an N x N distance matrix is generated by similarity measurement. For mergingSet, we will get a 15 x 15 matrix corresponding to the similarity distances between these compounds.

<<ScoreGSEA>>=
ds <- ScoreGSEA(MergingSet,SignatureLength=250,ScoringDistance="avg")
ds[1:5,1:5]
@

\subsection{Signature Distance}

As we mentioned above, four algorithms implemented as functions {\it Iorio.RankMerging}, {\it Pihur.RankMerging}, {\it ScoreGSEA} and {\it ScorePGSEA}, of which two algorithms called Iorio and Pihur algorithm are for rank merging, the other two algorithms called GSEA and PGSEA are for similarity measuring. Moreover, function {\it SignatureDistance} is provided to serve as a single entry and easy access point to all these four functions, which runs through the entire workflow, including rank merging and scoring, and is recommended to use in most cases.

<<SignatureDistance>>=
ds <- SignatureDistance(exampleSet,SignatureLength=250,MergingMethod="Iorio",
MergingDistance="Spearman",ScoringMethod="GSEA",ScoringDistance="avg")
ds[1:5,1:5]
@

\section{Implementation Details}

\subsection{Iorio's Rank Merging}

The Iorio's rank merging algorithm utilizes Kruskal algorithm \citep{cormen1990introduction} to merge the ranked lists which corresponding to a same biological state. The distance of these ranked lists must be calculated first, a measure of the distance between two ranked lists is computed using \emph{Spearman} algorithm or \emph{Kendall tau} algorithm. Next, merge the two or more ranked lists with the same biological state using \emph{Borda merging} algorithm.

According to the \emph{Kruskal} algorithm method \citep{cormen1990introduction}, this rank merging algorithm searches for the two ranked lists with the smallest Spearman's Footrule distance first, and then merges them using the Borda Merging method, obtaining a new ranked list. Finally, the new list replaces the two unmerged lists. This process won't terminate until only one list remains.

For convenience, users can directly obtain a PRL for each state by the function {\it Iorio.RankMerging}, which uses Sprearman, BordaMerging, and Kruskal algorithms to aggregate the ranked lists obtained with the same biological state. For instance, we will merge the sample data which with 50 samples into 15 samples.

<<Iorio.RankMerging>>=
IorioMergingSet <- Iorio.RankMerging(exampleSet,MergingDistance="Spearman")
show(IorioMergingSet)
@

\subsection{Pihur's Rank Merging}

Pihur developed an R package RankAggreg which provides an easy and convenient interface to handle complex rank merging problems. It performs ordered lists combining using two distinct algorithms with a choice of two different distances. For more details, see the doc in package RankAggreg. The function Pihur.RankMerging uses functions in RankAggreg package to merge ranked lists with the same biological state. However, the effectiveness of the two algorithms in RankAggreg is certainly limited by the size of the aggregation problem, which generates a limitation of the size of the ordered lists. Thus, this function only applies to short ranked lists merging.

<<Pihur.RankMerging>>=
PihurMergingSet <- Pihur.RankMerging(exampleSet[1:12],MergingDistance="Spearman")
show(PihurMergingSet)
@

\subsection{Similarity Measuring}

Once ranked lists with same biological states are merged to one single PRL, Gene Set Enrichment Analysis (GSEA) and Parametric Gene Set Enrichment Analysis (PGSEA) are adopted to measure the similarity among these PRLs. 

GSEA algorithm\citep{subramanian2005gene} is a nonparametric, rank-based method for similarity measuring to determine whether a priori defined set of genes shows statistically significant, concordant differences between two biological states. PGSEA algorithm is a modified gene set enrichment analysis method based on a parametric statistical analysis model, and we use the functions in R package PGSEA for similarity measuring.

<<ScoreGSEA>>=
ds <- ScoreGSEA(IorioMergingSet,SignatureLength=250,ScoringDistance="avg")
ds[1:5,1:5]
@

<<ScorePGSEA>>=
ds <- ScorePGSEA(IorioMergingSet,SignatureLength=250,ScoringDistance="avg")
ds[1:5,1:5]
@

\section{Futher Analysis}

To illustrate how to use GeneExpressionSignature in analysis of gene expression signatures, affinity propagation clustering can be used to group these biological states by the similarity of gene signature. Affinity propagation cluster algorithm iteratively searches for optimal clustering by maximizing an objective function called net similarity. Here, we use function in R apcluster package to classify the 15 biological states into 3 groups by clusting the matrix "ds" in the section 2.4. In this step, R package apcluster should also be installed on your computer.

Cytoscape is used to visualize the result of clustering. In the network, nodes denotes different compounds (cell states treated with different compounds), and the edge means the distance between these two compounds is lower than a threshold, which is 0.68 here. Different colors denote different groups, as the classification of compounds. We note that the largest group is numbered 9 nodes, and the other two consist of 3 nodes for each group.

\includegraphics{cluster.png}

\section*{Session Information}

The version number of R and packages loaded for generating the vignette were:

<<echo=FALSE>>=
sessionInfo()
@

\bibliography{GeneExpressionSignature}

\end{document}